name: ci

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        kind: ['build', 'test']
        go: ['^1.16.0']
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Go ${{ matrix.go }} ${{ matrix.kind }} in ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: Format
        if: matrix.kind == 'test'
        run: make format

      - name: Test
        if: matrix.kind == 'test'
        run: make test

      - name: Coverage
        if: matrix.kind == 'test' && runner.os == 'macOS' && github.repository == 'axetroy/gmock'
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          GO111MODULE=off go get golang.org/x/tools/cmd/cover
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service="GitHub Action" -jobid="${{ github.run_id }}" -jobnumber="${{ github.run_number }}" -reponame="${{ github.repository }}"

      - name: Build
        if: matrix.kind == 'build'
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --skip-publish --skip-validate

  release:
    name: Release to Github
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/gmock'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16.0"

      - uses: axetroy/setup-whatchanged@v1
        with:
          version: v0.3.5

      - name: Generate release.md
        run: |
          whatchanged --tpl=release.tpl --output=release.md
          cat release.md

      - name: Release to Github
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --release-notes=./release.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Prepare publish
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          cp README.md ./npm/README.md
          cp release.md ./npm/CHANGELOG.md
          cp LICENSE ./npm/LICENSE
          node ./npm/scripts/bump.js

      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          package: ./npm/package.json
          token: ${{ secrets.NPM_TOKEN }}