name: ci

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        go: ['^1.14.2']
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Go ${{ matrix.go }} test in ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: Test
        run: make test

      - name: Build
        run: make build

      - uses: actions/upload-artifact@v2
        if: runner.os == 'macOS'
        with:
          name: release
          path: ./bin

      - name: Send Coverage
        if: runner.os == 'macOS' && github.repository == 'axetroy/gmock'
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          GO111MODULE=off go get golang.org/x/tools/cmd/cover
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service="GitHub Action" -jobid="${{ github.run_id }}" -jobnumber="${{ github.run_number }}" -reponame="${{ github.repository }}"

  release:
    name: Release to Github
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/gmock'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: release
          path: ./bin

      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            bin/gmock_darwin_amd64.tar.gz
            bin/gmock_linux_amd64.tar.gz
            bin/gmock_windows_amd64.tar.gz
          draft: false
